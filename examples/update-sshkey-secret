#!/usr/bin/env bash

authenticate(){
  # Authenticate to Vault

  return 0
}

help() {
  echo "
    $0 --pipeline <pipeline name>
    --debug - enable xtrace
    --help  - this ...
    --pipeline - BK pipeline to add secrets for
    --basepath - base path for secrets in vault, defaults to kv/buildkite

    Env vars:
    VAULT_ADDR - URL to access your Vault Server (required)
  "
}

set -o noclobber -o nounset -o pipefail
[ $? -eq 0 ] || {
    echo "Incorrect options provided"
    show_help
    exit 1
}

BASE64_DECODE_ARGS="-d"
case `uname -s` in
  Darwin) BASE64_DECODE_ARGS="--decode" ;;
esac

BASE_PATH="kv/buildkite"
if [ -z "${VAULT_ADDR:-}" ] ; then
  echo "define VAULT_ADDR"
  exit 1
fi

while [ "${@+defined}" ]; do
    case "$1" in
        --help) help=1 ;;
        --debug) set -o xtrace ; debug=1 ;;
        --pipeline) shift ; PIPELINE="/${1}" ;;
        --basepath) shift ; BASE_PATH="${1}" ;;
        --) shift ; break ;;
        *)
            echo "Not implemented: ${1}" >&2
            exit 1
            ;;
    esac
    shift
done

if [[ -z "${PIPELINE:-}" ]] ; then
    echo "Usage: $0 --pipeline <pipeline>
      --pipeline is a required argument."
    exit 1
fi

vault token-lookup > /dev/null 2>&1
authenticate
TMPDIR=$(mktemp -d -u)
mkdir -p $TMPDIR
cd $TMPDIR

ssh-keygen -f ./private_ssh_key -N ''
if [ $? -eq 0 ] ; then
  echo -n $(cat private_ssh_key | base64) | vault write ${BASE_PATH}${PIPELINE}/private_ssh_key \
    value=-
  echo -n $(cat private_ssh_key.pub | base64) | vault write ${BASE_PATH}${PIPELINE}/private_ssh_key.pub \
    value=-
fi

rm -rf $TMPDIR
